words_coords$layout$y[1:25],
word_frequencies$words[1:25], cex=.75)
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
# Pack.
word_frequencies <- word_frequencies[order(-word_frequencies$radius), ]
word_frequencies$x <- seq(-300, 300, length.out = nrow(word_frequencies))
word_frequencies$y <- runif(nrow(word_frequencies), -300, 300)
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
words_coords <- circleRepelLayout(word_frequencies[, c("x", "y", "radius")],
sizetype = "radius",
xlim = c(-500, 500), ylim = c(-400, 400))
par(bg = "#e8e8e8")
plot(words_coords$layout$x, words_coords$layout$y,
type = "n", asp = 1, xlab = "", ylab = "", axes = FALSE)
symbols(words_coords$layout$x, words_coords$layout$y,
circles = words_coords$layout$radius, lwd = 0.3,
inches = FALSE, add = TRUE)
text(words_coords$layout$x[1:25],
words_coords$layout$y[1:25],
word_frequencies$wrapped_words[1:25], cex = 0.75)
View(tuesdata)
# Packed circles.
packed_coords <- circleRepelLayout(word_frequencies, sizetype="radius")
# Most occurring keywords?
word_frequencies <- user2025 |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
count(words, sort = TRUE)
word_frequencies <- word_frequencies |>
mutate(
sqrt_n = sqrt(n),
radius = 90 * sqrt_n / max(sqrt_n)
) |>
select(-sqrt_n)
# Packed circles.
packed_coords <- circleRepelLayout(word_frequencies, sizetype="radius")
View(word_frequencies)
summary(word_frequencies)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-15,15), ylim=c(-15,15),
inches=FALSE, asp=1)
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
# Labels.
text(packed_coords$layout$x, packed_coords$layout$y,
word_frequencies$wrapped_words)
library(packcircles)
# Packed circles.
word_frequencies$x <- seq(-300, 300, length.out = n)
# Packed circles.
n <- nrow(word_frequencies)
word_frequencies$x <- seq(-300, 300, length.out = n)
word_frequencies$y <- runif(n, min = -400, max = 400)
packed_coords <- circleRepelLayout(word_frequencies, sizetype="radius")
packed_coords <- circleRepelLayout(word_frequencies[, c("x", "y", "radius")],
sizetype = "radius")
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-15,15), ylim=c(-15,15),
inches=FALSE, asp=1)
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-15,15), ylim=c(-15,15),
inches=FALSE, asp=1)
# Labels.
text(packed_coords$layout$x, packed_coords$layout$y,
word_frequencies$wrapped_words)
word_frequencies <- word_frequencies |>
mutate(
sqrt_n = sqrt(n),
radius = 45 * sqrt_n / max(sqrt_n)
) |>
select(-sqrt_n)
packed_coords <- circleRepelLayout(word_frequencies[, c("x", "y", "radius")],
sizetype = "radius")
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-15,15), ylim=c(-15,15),
inches=FALSE, asp=1)
# Labels.
text(packed_coords$layout$x, packed_coords$layout$y,
word_frequencies$wrapped_words)
word_frequencies <- word_frequencies |>
mutate(
sqrt_n = sqrt(n),
radius = 10 * sqrt_n / max(sqrt_n)
) |>
select(-sqrt_n)
# Packed circles.
n <- nrow(word_frequencies)
word_frequencies$x <- seq(-300, 300, length.out = n)
word_frequencies$y <- runif(n, min = -400, max = 400)
packed_coords <- circleRepelLayout(word_frequencies[, c("x", "y", "radius")],
sizetype = "radius")
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-15,15), ylim=c(-15,15),
inches=FALSE, asp=1)
# Labels.
text(packed_coords$layout$x, packed_coords$layout$y,
word_frequencies$wrapped_words)
grouping <- user2025 |>
mutate(day = day(date)) |> # Extract day from the date
mutate(words = strsplit(as.character(keywords), ",\\s*")) |> # Split keywords
unnest(words) |> # Expand list-column into rows
mutate(words = trimws(words)) |> # Trim whitespace
group_by(day, words) |> # Group by day and keyword
summarise(n = n(), .groups = 'drop') |> # Count occurrences
arrange(day, desc(n)) # Sort by day and descending frequency
View(grouping)
# Apply sqrt to reduce skew
radii_raw <- sqrt(word_frequencies$n)
# Define desired min and max radius
min_radius <- 5
max_radius <- 45
# Rescale radii_raw linearly between min_radius and max_radius
word_frequencies$radius <- min_radius +
(radii_raw - min(radii_raw)) / (max(radii_raw) - min(radii_raw)) * (max_radius - min_radius)
# Most occurring keywords?
word_frequencies <- user2025 |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
count(words, sort = TRUE)
# Apply sqrt to reduce skew
radii_raw <- sqrt(word_frequencies$n)
# Define desired min and max radius
min_radius <- 5
max_radius <- 45
# Rescale radii_raw linearly between min_radius and max_radius
word_frequencies$radius <- min_radius +
(radii_raw - min(radii_raw)) / (max(radii_raw) - min(radii_raw)) * (max_radius - min_radius)
# Packed circles.
n <- nrow(word_frequencies)
word_frequencies$x <- seq(-300, 300, length.out = n)
word_frequencies$y <- runif(n, min = -400, max = 400)
packed_coords <- circleRepelLayout(word_frequencies[, c("x", "y", "radius")],
sizetype = "radius")
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-600,600), ylim=c(-500,500),
inches=FALSE, asp=1)
# Labels.
text(packed_coords$layout$x, packed_coords$layout$y,
word_frequencies$wrapped_words)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-600,600), ylim=c(-500,500),
inches=FALSE, asp=1)
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
plot(packed_coords$layout$x, packed_coords$layout$y,
type = "n", asp = 1,
xlim = c(-600, 600), ylim = c(-500, 500),
xlab = "", ylab = "", axes = FALSE)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles = packed_coords$layout$radius,
inches = FALSE, add = TRUE, lwd = 0.3)
plot(packed_coords$layout$x, packed_coords$layout$y,
type = "n", asp = 1,
xlim = c(-100, 100), ylim = c(-50, 50),
xlab = "", ylab = "", axes = FALSE)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles = packed_coords$layout$radius,
inches = FALSE, add = TRUE, lwd = 0.3)
# Layout
n <- nrow(word_frequencies)
word_frequencies$x <- seq(-300, 300, length.out = n)
word_frequencies$y <- runif(n, min = -400, max = 400)
word_frequencies$wrapped_words <- gsub(" ", "\n", word_frequencies$words)
packed_coords <- circleRepelLayout(word_frequencies[, c("x", "y", "radius")],
sizetype = "radius")
# Store layout coordinates
word_frequencies$x_final <- packed_coords$layout$x
word_frequencies$y_final <- packed_coords$layout$y
# Plot
par(bg = "#f4f4f4")
plot(word_frequencies$x_final, word_frequencies$y_final,
type = "n", asp = 1, xlim = c(-600, 600), ylim = c(-500, 500),
xlab = "", ylab = "", axes = FALSE)
symbols(word_frequencies$x_final, word_frequencies$y_final,
circles = word_frequencies$radius,
inches = FALSE, add = TRUE, lwd = 0.3)
text(word_frequencies$x_final, word_frequencies$y_final,
labels = word_frequencies$wrapped_words, cex = 0.7, col = "#333333")
par(bg = "#f4f4f4")
plot(word_frequencies$x_final, word_frequencies$y_final,
type = "n", asp = 1, xlim = c(-600, 600), ylim = c(-500, 500),
xlab = "", ylab = "", axes = FALSE)
symbols(word_frequencies$x_final, word_frequencies$y_final,
circles = word_frequencies$radius,
inches = FALSE, add = TRUE, lwd = 0.3)
gc()
# Layout
n <- nrow(word_frequencies)
# Most occurring keywords?
word_frequencies <- user2025 |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
count(words, sort = TRUE)
# Layout
n <- nrow(word_frequencies)
x <- sample(c(-10, 10), size=n, replace=TRUE) + runif(n)
y <- sample(c(-10, 10), size=n, replace=TRUE) + runif(n)
r <- abs(rnorm(n, 0, 1.2))
circle_data <- data.frame(x = x, y = y, radius = r)
packed_coords <- circleRepelLayout(circle_data, sizetype="radius", maxiter = 5000)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-25,25), ylim=c(-25,25),
inches=FALSE, asp=1)
r <- c(1,2,3,4,5,6)
theta <- runif(length(r), min = 0, max=2*pi)
distfromcenter <- 7*max(r) / r
distfromcenter[distfromcenter > 5] <- 5
x <- distfromcenter * cos(theta) y <- distfromcenter * sin(theta)
x <- distfromcenter * cos(theta)
y <- distfromcenter * sin(theta)
circle_data <- data.frame(x = x, y = y, radius = r)
View(circle_data)
packed_coords <- circleRepelLayout(circle_data, sizetype="radius")
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-15,15), ylim=c(-15,15),
inches=FALSE, asp=1)
gc()
n <- 100
x <- sample(c(-10, 10), size=n, replace=TRUE) + runif(n)
y <- sample(c(-10, 10), size=n, replace=TRUE) + runif(n)
r <- abs(rnorm(n, 0, 1.2))
circle_data <- data.frame(x = x, y = y, radius = r)
packed_coords <- circleRepelLayout(circle_data, sizetype="radius", maxiter = 5000)
symbols(packed_coords$layout$x, packed_coords$layout$y,
circles=packed_coords$layout$radius,
xlim=c(-25,25), ylim=c(-25,25),
inches=FALSE, asp=1)
grouping |>
group_by(day) |>
summarise(events = n())
user2025 |>
mutate(day = day(date)) |>
group_by(day) |>
summarise(events = n())
user2025 |>
mutate(day = day(date)) |>
group_by(day) |>
summarise(events = n())
?ggrepel
??ggrepel
events_per_day <- user2025 |>
mutate(day = day(date)) |>
group_by(day) |>
summarise(events = n())
events_per_day <- user2025 |>
mutate(day = day(date)) |>
group_by(day) |>
summarise(events = n(), .groups = "drop")
# Function to generate packed layout per day
layout_list <- grouping |>
group_by(day) |>
group_split() |>
lapply(function(df_day) {
layout <- circleRepelLayout(df_day["n"], sizetype = "radius")
layout$layout$day <- unique(df_day$day)
layout$layout$words <- df_day$words
layout$layout$n <- df_day$n
layout$layout
})
?group_split
View(grouping)
# Function to generate packed layout per day
layout_list <- grouping |>
group_by(day) |>
group_split() |>
lapply(function(grouping) {
layout <- circleRepelLayout(grouping$n, sizetype = "radius")
layout$layout$day <- unique(grouping$day)
layout$layout$words <- grouping$words
layout$layout$n <- grouping$n
layout$layout
})
View(layout_list)
# Combine all layouts
all_layouts <- do.call(rbind, layout_list)
View(all_layouts)
all_layouts$x <- all_layouts$x + (all_layouts$day * 60)
ggplot(all_layouts) +
geom_point(aes(x = x, y = y, size = radius), shape = 21, fill = "lightblue", color = "grey30") +
geom_text_repel(aes(x = x, y = y, label = words), size = 2.5, max.overlaps = 100) +
scale_size_continuous(range = c(2, 15), guide = FALSE) +
theme_void() +
coord_equal() +
ggtitle("Keyword Clusters per Day (Circle Size = Frequency)")
library(ggrepel)
ggplot(all_layouts) +
geom_point(aes(x = x, y = y, size = radius), shape = 21, fill = "lightblue", color = "grey30") +
geom_text_repel(aes(x = x, y = y, label = words), size = 2.5, max.overlaps = 100) +
scale_size_continuous(range = c(2, 15), guide = FALSE) +
theme_void() +
coord_equal() +
ggtitle("Keyword Clusters per Day (Circle Size = Frequency)")
gc()
gc()
tuesdata <- tidytuesdayR::tt_load(2025, week = 17)
user2025 <- tuesdata$user2025
# Most occurring keywords?
word_frequencies <- user2025 |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
count(words, sort = TRUE)
grouping <- user2025 |>
mutate(day = day(date)) |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
group_by(day, words) |>
summarise(n = n(), .groups = 'drop') |>
arrange(day, desc(n))
events_per_day <- user2025 |>
mutate(day = day(date)) |>
group_by(day) |>
summarise(events = n(), .groups = "drop")
View(events_per_day)
View(grouping)
str(grouping)
day1 <- grouping |>
filter(day == 1)
View(day1)
head(day1)
events_per_day <- user2025 |>
mutate(day = day(date)) |>
group_by(day) |>
summarise(events = n(), .groups = "drop")
View(events_per_day)
day2 <- grouping |>
filter(day == 8)
day3 <- grouping |>
filter(day == 9)
day4 <- grouping |>
filter(day == 10)
n_distinct(grouping$n)
grouping |>
group_by(n) |>
summarise(count = n())
datasets <- list(day1, day2, day3, day4)
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- data$n
return(data)
})
#Plot 1.
day1$x <- 1:dim(verbs)[1]/12
#Plot 1.
day1$x <- 1:dim(day1)[1]/12
range(day1$x)
day1$y <- runif(length(day1$x), -300, 300)
day1$y <- runif(length(day1$x), -300, 300)
day1_coords <- circleRepelLayout(day1[,c("x", "y", "radius")],
sizetype="radius",
xlim=c(-500,500), ylim=c(-400,400))
day1 <- grouping |>
filter(day == 1)
day2 <- grouping |>
filter(day == 8)
day3 <- grouping |>
filter(day == 9)
day4 <- grouping |>
filter(day == 10)
# Adding radii column
datasets <- list(day1, day2, day3, day4)
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- data$n
return(data)
})
#Plot 1.
day1 <- datasets[[1]]
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- data$n
return(data)
})
#Plot 1.
day1 <- datasets[[1]]
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- data$n
return(data)
})
#Plot 1.
day1 <- datasets_with_radii[[1]]
day1$x <- 1:dim(day1)[1]/12
day1$y <- runif(length(day1$x), -300, 300)
day1_coords <- circleRepelLayout(day1[,c("x", "y", "radius")],
sizetype="radius",
xlim=c(-500,500), ylim=c(-400,400))
par(bg="#e8e8e8")
plot(day1_coords$layout$x, day1_coords$layout$y,
type="n", asp=1, xlab="", ylab="", axes=FALSE)
symbols(day1_coords$layout$x, day1_coords$layout$y,
circles=day1_coords$layout$radius, lwd=.3,
inches=FALSE, add=TRUE)
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- data$n * 3
return(data)
})
#Plot 1.
day1 <- datasets_with_radii[[1]]
day1$x <- 1:dim(day1)[1]/12
day1$y <- runif(length(day1$x), -300, 300)
day1_coords <- circleRepelLayout(day1[,c("x", "y", "radius")],
sizetype="radius",
xlim=c(-500,500), ylim=c(-400,400))
par(bg="#e8e8e8")
plot(day1_coords$layout$x, day1_coords$layout$y,
type="n", asp=1, xlab="", ylab="", axes=FALSE)
symbols(day1_coords$layout$x, day1_coords$layout$y,
circles=day1_coords$layout$radius, lwd=.3,
inches=FALSE, add=TRUE)
day1_coords <- circleRepelLayout(day1[,c("x", "y", "radius")],
sizetype="radius",
xlim=c(-50,50), ylim=c(-40,40))
par(bg="#e8e8e8")
plot(day1_coords$layout$x, day1_coords$layout$y,
type="n", asp=1, xlab="", ylab="", axes=FALSE)
symbols(day1_coords$layout$x, day1_coords$layout$y,
circles=day1_coords$layout$radius, lwd=.3,
inches=FALSE, add=TRUE)
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- data$n * 7
return(data)
})
#Plot 1.
day1 <- datasets_with_radii[[1]]
day1$x <- 1:dim(day1)[1]/12
day1$y <- runif(length(day1$x), -30, 30)
day1_coords <- circleRepelLayout(day1[,c("x", "y", "radius")],
sizetype="radius",
xlim=c(-50,50), ylim=c(-40,40))
par(bg="#e8e8e8")
plot(day1_coords$layout$x, day1_coords$layout$y,
type="n", asp=1, xlab="", ylab="", axes=FALSE)
symbols(day1_coords$layout$x, day1_coords$layout$y,
circles=day1_coords$layout$radius, lwd=.3,
inches=FALSE, add=TRUE)
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- abs(rnorm(n, 0, 30))
return(data)
})
datasets_with_radii <- lapply(datasets, function(data) {
data$radius <- abs(rnorm(120, 0, 30))
return(data)
})
day1 <- grouping |>
filter(day == 1)
library(packcircles)
function (...)
grouping <- user2025 |>
mutate(day = day(date)) |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
group_by(day, words) |>
summarise(n = n(), .groups = 'drop') |>
arrange(day, desc(n))
day1 <- grouping |>
filter(day == 1)
tuesdata <- tidytuesdayR::tt_load(2025, week = 17)
user2025 <- tuesdata$user2025
grouping <- user2025 |>
mutate(day = day(date)) |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
group_by(day, words) |>
summarise(n = n(), .groups = 'drop') |>
arrange(day, desc(n))
library(tidyverse)
grouping <- user2025 |>
mutate(day = day(date)) |>
mutate(words = strsplit(as.character(keywords), ",\\s*")) |>
unnest(words) |>
mutate(words = trimws(words)) |>
group_by(day, words) |>
summarise(n = n(), .groups = 'drop') |>
arrange(day, desc(n))
day1 <- grouping |>
filter(day == 1)
day2 <- grouping |>
filter(day == 8)
day3 <- grouping |>
filter(day == 9)
day4 <- grouping |>
filter(day == 10)
# Adding radii column
datasets <- list(day1, day2, day3, day4)
#Plot 1.
day1$radius <- r <- abs(rnorm(120, 0, 30))
#day1 <- datasets_with_radii[[1]]
day1$x <- 1:dim(day1)[1]/12
day1$y <- runif(length(day1$x), -30, 30)
day1_coords <- circleRepelLayout(day1[,c("x", "y", "radius")],
sizetype="radius",
xlim=c(-50,50), ylim=c(-40,40))
par(bg="#e8e8e8")
plot(day1_coords$layout$x, day1_coords$layout$y,
type="n", asp=1, xlab="", ylab="", axes=FALSE)
symbols(day1_coords$layout$x, day1_coords$layout$y,
circles=day1_coords$layout$radius, lwd=.3,
inches=FALSE, add=TRUE)
